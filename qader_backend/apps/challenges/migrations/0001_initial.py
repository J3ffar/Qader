# Generated by Django 5.2 on 2025-04-23 21:23

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('study', '0006_userquestionattempt_conversation_session'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('challenge_type', models.CharField(choices=[('quick_quant_10', 'Quick Quant (10 Q)'), ('medium_verbal_15', 'Medium Verbal (15 Q, No Hints)'), ('comprehensive_20', 'Comprehensive (20 Q)'), ('speed_challenge_5min', 'Speed Challenge (5 Min)'), ('accuracy_challenge', 'Accuracy Challenge'), ('custom', 'Custom')], help_text='Identifier for the predefined type of challenge.', max_length=30, verbose_name='challenge type')),
                ('status', models.CharField(choices=[('pending_invite', 'Pending Invite'), ('pending_matchmaking', 'Pending Matchmaking'), ('accepted', 'Accepted / Waiting Start'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('declined', 'Declined'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], db_index=True, default='pending_invite', max_length=20, verbose_name='status')),
                ('challenge_config', models.JSONField(help_text='Specific parameters for this challenge instance.', verbose_name='challenge configuration')),
                ('question_ids', models.JSONField(default=list, help_text='Ordered list of question IDs included in this challenge.', verbose_name='question IDs')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('accepted_at', models.DateTimeField(blank=True, null=True, verbose_name='accepted at')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='started at')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='completed at')),
                ('challenger_points_awarded', models.IntegerField(blank=True, null=True, verbose_name='Challenger Points Awarded')),
                ('opponent_points_awarded', models.IntegerField(blank=True, null=True, verbose_name='Opponent Points Awarded')),
                ('challenger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='initiated_challenges', to=settings.AUTH_USER_MODEL, verbose_name='Challenger')),
                ('opponent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_challenges', to=settings.AUTH_USER_MODEL, verbose_name='Opponent')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_challenges', to=settings.AUTH_USER_MODEL, verbose_name='Winner')),
            ],
            options={
                'verbose_name': 'Challenge',
                'verbose_name_plural': 'Challenges',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChallengeAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0, verbose_name='score')),
                ('is_ready', models.BooleanField(default=False, help_text='Indicates if the user has joined the challenge screen and is ready to start.', verbose_name='is ready')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='user start time')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='user end time')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='challenges.challenge', verbose_name='Challenge')),
                ('question_attempts', models.ManyToManyField(blank=True, related_name='challenge_context', to='study.userquestionattempt', verbose_name='Question Attempts in this Challenge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenge_attempts', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Challenge Attempt',
                'verbose_name_plural': 'Challenge Attempts',
                'ordering': ['challenge', 'user'],
                'unique_together': {('challenge', 'user')},
            },
        ),
    ]
