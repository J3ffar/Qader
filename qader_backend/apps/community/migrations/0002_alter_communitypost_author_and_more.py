# Generated by Django 5.2 on 2025-04-23 19:09

import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('community', '0001_initial'),
        ('learning', '0001_initial'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='communitypost',
            name='author',
            field=models.ForeignKey(help_text='The user who created this post.', on_delete=django.db.models.deletion.CASCADE, related_name='community_posts', to=settings.AUTH_USER_MODEL, verbose_name='Author'),
        ),
        migrations.AlterField(
            model_name='communitypost',
            name='content',
            field=models.TextField(help_text='The main body of the post.', verbose_name='Content'),
        ),
        migrations.AlterField(
            model_name='communitypost',
            name='is_closed',
            field=models.BooleanField(default=False, help_text='Prevents further replies (Admin/Moderator action).', verbose_name='Is Closed'),
        ),
        migrations.AlterField(
            model_name='communitypost',
            name='is_pinned',
            field=models.BooleanField(db_index=True, default=False, help_text='Pinned posts appear at the top (Admin/Moderator action).', verbose_name='Is Pinned'),
        ),
        migrations.AlterField(
            model_name='communitypost',
            name='post_type',
            field=models.CharField(choices=[('discussion', 'Study Discussion'), ('achievement', 'Achievement'), ('partner_search', 'Find Study Partners'), ('tip', 'Tips & Experiences'), ('competition', 'Monthly Competition')], db_index=True, help_text='The category or purpose of the post.', max_length=20, verbose_name='Post Type'),
        ),
        migrations.AlterField(
            model_name='communitypost',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='Relevant keywords or topics for the post.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AlterField(
            model_name='communitypost',
            name='title',
            field=models.CharField(blank=True, help_text='Optional title for the post.', max_length=255, null=True, verbose_name='Title'),
        ),
        migrations.AlterField(
            model_name='communityreply',
            name='author',
            field=models.ForeignKey(help_text='The user who wrote this reply.', on_delete=django.db.models.deletion.CASCADE, related_name='community_replies', to=settings.AUTH_USER_MODEL, verbose_name='Author'),
        ),
        migrations.AlterField(
            model_name='communityreply',
            name='content',
            field=models.TextField(help_text='The body of the reply.', verbose_name='Content'),
        ),
        migrations.AlterField(
            model_name='communityreply',
            name='parent_reply',
            field=models.ForeignKey(blank=True, help_text='Links to the reply being responded to for threading.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_replies', to='community.communityreply', verbose_name='Parent Reply'),
        ),
        migrations.AlterField(
            model_name='communityreply',
            name='post',
            field=models.ForeignKey(help_text='The post this reply belongs to.', on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='community.communitypost', verbose_name='Post'),
        ),
        migrations.AddIndex(
            model_name='communitypost',
            index=models.Index(fields=['-created_at'], name='community_c_created_515528_idx'),
        ),
        migrations.AddIndex(
            model_name='communitypost',
            index=models.Index(fields=['post_type'], name='community_c_post_ty_5fdf6c_idx'),
        ),
        migrations.AddIndex(
            model_name='communityreply',
            index=models.Index(fields=['post', 'created_at'], name='community_c_post_id_f45a12_idx'),
        ),
    ]
