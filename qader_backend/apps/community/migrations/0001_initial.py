# Generated by Django 5.2 on 2025-04-22 17:45

import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('learning', '0001_initial'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CommunityPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_type', models.CharField(choices=[('discussion', 'Study Discussion'), ('achievement', 'Achievement'), ('partner_search', 'Find Study Partners'), ('tip', 'Tips & Experiences'), ('competition', 'Monthly Competition')], db_index=True, max_length=20, verbose_name='Post Type')),
                ('title', models.CharField(blank=True, help_text='Optional title for the post', max_length=255, null=True, verbose_name='Title')),
                ('content', models.TextField(verbose_name='Content')),
                ('is_pinned', models.BooleanField(default=False, help_text='Pinned posts appear at the top (Admin only)', verbose_name='Is Pinned')),
                ('is_closed', models.BooleanField(default=False, help_text='Prevents further replies (Admin only)', verbose_name='Is Closed')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_posts', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('section_filter', models.ForeignKey(blank=True, help_text='Optional filter by main learning section (e.g., Quant, Verbal)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='community_posts', to='learning.learningsection', verbose_name='Section Filter')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Community Post',
                'verbose_name_plural': 'Community Posts',
                'ordering': ['-is_pinned', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommunityReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Content')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='community_replies', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('parent_reply', models.ForeignKey(blank=True, help_text='Links to the reply being responded to for threading', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_replies', to='community.communityreply', verbose_name='Parent Reply')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='community.communitypost', verbose_name='Post')),
            ],
            options={
                'verbose_name': 'Community Reply',
                'verbose_name_plural': 'Community Replies',
                'ordering': ['created_at'],
            },
        ),
    ]
