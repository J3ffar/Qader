# Generated by Django 5.2 on 2025-05-17 22:06

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verb', models.CharField(help_text="A short description of the action, e.g., 'liked your post', 'earned a new badge'.", max_length=255, verbose_name='Verb')),
                ('description', models.TextField(blank=True, help_text='Optional: More detailed text for the notification. Can include simple HTML if rendered carefully.', null=True, verbose_name='Description')),
                ('target_object_id', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='Target Object ID')),
                ('action_object_object_id', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='Action Object ID')),
                ('notification_type', models.CharField(choices=[('INFO', 'Information'), ('SUCCESS', 'Success'), ('WARNING', 'Warning'), ('ERROR', 'Error'), ('SYSTEM', 'System Update'), ('USER_PROFILE', 'User Profile Update'), ('SUBSCRIPTION', 'Subscription Update'), ('BADGE_EARNED', 'Badge Earned'), ('COMMUNITY_POST', 'Community Post Interaction'), ('COMMUNITY_REPLY', 'Community Reply Interaction'), ('CHALLENGE_INVITE', 'Challenge Invitation'), ('CHALLENGE_UPDATE', 'Challenge Update'), ('MENTOR_ASSIGNMENT', 'Mentor Assignment'), ('SUPPORT_TICKET', 'Support Ticket Update')], db_index=True, default='INFO', max_length=20, verbose_name='Notification Type')),
                ('is_read', models.BooleanField(db_index=True, default=False, verbose_name='Is Read?')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Read At')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name='Created At')),
                ('url', models.URLField(blank=True, max_length=500, null=True, verbose_name='URL')),
                ('data', models.JSONField(blank=True, null=True, verbose_name='Additional Data')),
                ('action_object_content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_action_object', to='contenttypes.contenttype')),
                ('actor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='triggered_notifications', to=settings.AUTH_USER_MODEL, verbose_name='Actor')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Recipient')),
                ('target_content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_target', to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['recipient', 'is_read', '-created_at'], name='notificatio_recipie_684eac_idx'), models.Index(fields=['target_content_type', 'target_object_id'], name='notificatio_target__dfbaf5_idx'), models.Index(fields=['action_object_content_type', 'action_object_object_id'], name='notificatio_action__6e12f7_idx')],
            },
        ),
    ]
