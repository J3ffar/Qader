# Generated by Django 5.2 on 2025-04-18 19:59

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('learning', '0001_initial'),
        ('study', '0002_userskillproficiency'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmergencyModeSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(blank=True, null=True, verbose_name='reason')),
                ('suggested_plan', models.JSONField(blank=True, null=True, verbose_name='suggested plan')),
                ('calm_mode_active', models.BooleanField(default=False, verbose_name='calm mode active')),
                ('start_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='start time')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='end time')),
                ('shared_with_admin', models.BooleanField(default=False, verbose_name='shared with admin')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'Emergency Mode Session',
                'verbose_name_plural': 'Emergency Mode Sessions',
                'ordering': ['-start_time'],
            },
        ),
        migrations.AlterModelOptions(
            name='userskillproficiency',
            options={'ordering': ['user', 'skill'], 'verbose_name': 'User Skill Proficiency', 'verbose_name_plural': 'User Skill Proficiencies'},
        ),
        migrations.AlterUniqueTogether(
            name='userquestionattempt',
            unique_together=set(),
        ),
        migrations.AlterField(
            model_name='userquestionattempt',
            name='is_correct',
            field=models.BooleanField(blank=True, db_index=True, null=True, verbose_name='is correct'),
        ),
        migrations.AlterField(
            model_name='userskillproficiency',
            name='attempts_count',
            field=models.PositiveIntegerField(default=0, verbose_name='Attempts Count'),
        ),
        migrations.AlterField(
            model_name='userskillproficiency',
            name='correct_count',
            field=models.PositiveIntegerField(default=0, verbose_name='Correct Count'),
        ),
        migrations.AlterField(
            model_name='userskillproficiency',
            name='last_calculated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Last Calculated At'),
        ),
        migrations.AlterField(
            model_name='userskillproficiency',
            name='proficiency_score',
            field=models.FloatField(default=0.0, help_text='Calculated score representing user mastery (0.0 to 1.0).', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)], verbose_name='Proficiency Score'),
        ),
        migrations.AlterField(
            model_name='userskillproficiency',
            name='skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_proficiencies', to='learning.skill'),
        ),
        migrations.AlterField(
            model_name='usertestattempt',
            name='test_configuration',
            field=models.JSONField(blank=True, help_text='Configuration used for this specific test instance (dynamic or custom). Includes criteria like sections, skills, starred, not_mastered, num_questions, etc.', null=True, verbose_name='test configuration snapshot'),
        ),
        migrations.AddConstraint(
            model_name='userquestionattempt',
            constraint=models.UniqueConstraint(condition=models.Q(('test_attempt__isnull', False)), fields=('user', 'question', 'test_attempt'), name='unique_user_question_per_test_attempt'),
        ),
        migrations.AddField(
            model_name='emergencymodesession',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_sessions', to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
    ]
