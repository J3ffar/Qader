# Generated by Django 5.2 on 2025-04-19 10:13

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(max_length=110, unique=True, verbose_name='Slug')),
                ('description', models.TextField(verbose_name='Description')),
                ('icon_class_or_image', models.CharField(max_length=255, verbose_name='Icon Class or Image URL')),
                ('criteria_description', models.TextField(verbose_name='Criteria Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Badge',
                'verbose_name_plural': 'Badges',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RewardStoreItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('item_type', models.CharField(choices=[('avatar', 'Avatar/Theme'), ('material', 'Study Material/Outline'), ('competition_entry', 'Competition Entry'), ('other', 'Other')], default='other', max_length=20, verbose_name='Item Type')),
                ('cost_points', models.PositiveIntegerField(verbose_name='Cost (Points)')),
                ('asset_url_or_data', models.CharField(blank=True, max_length=255, null=True, verbose_name='Asset URL or Data')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Reward Store Item',
                'verbose_name_plural': 'Reward Store Items',
                'ordering': ['item_type', 'cost_points', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PointLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_change', models.IntegerField(verbose_name='Points Change')),
                ('reason_code', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='Reason Code')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Related Object ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Timestamp')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype', verbose_name='Related Object Type')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='point_logs', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Point Log',
                'verbose_name_plural': 'Point Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserRewardPurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_spent', models.PositiveIntegerField(verbose_name='Points Spent')),
                ('purchased_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Purchased At')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchases', to='gamification.rewardstoreitem', verbose_name='Item')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reward_purchases', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Reward Purchase',
                'verbose_name_plural': 'User Reward Purchases',
                'ordering': ['-purchased_at'],
            },
        ),
        migrations.CreateModel(
            name='UserBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DateTimeField(auto_now_add=True, verbose_name='Earned At')),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earned_by', to='gamification.badge', verbose_name='Badge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earned_badges', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Badge',
                'verbose_name_plural': 'User Badges',
                'ordering': ['-earned_at'],
                'unique_together': {('user', 'badge')},
            },
        ),
    ]
