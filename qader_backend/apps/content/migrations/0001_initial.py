# Generated by Django 5.2 on 2025-04-22 14:39

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FAQCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order in which categories appear.', verbose_name='Display Order')),
            ],
            options={
                'verbose_name': 'FAQ Category',
                'verbose_name_plural': 'FAQ Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='HomepageFeatureCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('text', models.TextField(help_text='Short description on the card.', verbose_name='Text')),
                ('svg_image', models.TextField(blank=True, help_text='Paste the SVG code here, or provide an icon class below.', null=True, verbose_name='SVG Image Code')),
                ('icon_class', models.CharField(blank=True, help_text='Alternative to SVG: CSS class for the icon.', max_length=100, null=True, verbose_name='Icon Class')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Homepage Feature Card',
                'verbose_name_plural': 'Homepage Feature Cards',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='HomepageStatistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('label', models.CharField(help_text="e.g., 'Number of Questions'", max_length=100, verbose_name='Label')),
                ('value', models.CharField(help_text="e.g., '15,000+'", max_length=50, verbose_name='Value')),
                ('icon_class', models.CharField(blank=True, max_length=100, null=True, verbose_name='Icon Class')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Homepage Statistic',
                'verbose_name_plural': 'Homepage Statistics',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('slug', models.SlugField(help_text="Unique identifier for the page/content (e.g., 'terms-and-conditions'). Used in URLs.", max_length=100, unique=True, verbose_name='Slug')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('content', models.TextField(help_text='Main content (supports HTML or Markdown).', verbose_name='Content')),
                ('icon_class', models.CharField(blank=True, help_text='Optional CSS class for an icon associated with the page (e.g., for Terms page sections).', max_length=100, null=True, verbose_name='Icon Class')),
                ('is_published', models.BooleanField(db_index=True, default=True, help_text='Whether the page is visible publicly.', verbose_name='Is Published')),
            ],
            options={
                'verbose_name': 'Page',
                'verbose_name_plural': 'Pages',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='PartnerCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Name')),
                ('description', models.TextField(help_text='Description displayed on the card.', verbose_name='Description')),
                ('icon_svg_or_class', models.CharField(blank=True, help_text='SVG code or CSS class for the icon.', max_length=255, null=True, verbose_name='Icon SVG or Class')),
                ('google_form_link', models.URLField(help_text='Link to the application form for this partnership type.', max_length=500, verbose_name='Google Form Link')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order in which partner cards appear.', verbose_name='Display Order')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='Is Active')),
            ],
            options={
                'verbose_name': 'Partner Category',
                'verbose_name_plural': 'Partner Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('full_name', models.CharField(max_length=150, verbose_name='Full Name')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('subject', models.CharField(max_length=200, verbose_name='Subject')),
                ('message', models.TextField(verbose_name='Message')),
                ('attachment', models.FileField(blank=True, null=True, upload_to='contact_attachments/%Y/%m/', verbose_name='Attachment')),
                ('status', models.CharField(choices=[('new', 'New'), ('read', 'Read'), ('replied', 'Replied'), ('archived', 'Archived')], db_index=True, default='new', max_length=10, verbose_name='Status')),
                ('response', models.TextField(blank=True, null=True, verbose_name='Response')),
                ('responded_at', models.DateTimeField(blank=True, null=True, verbose_name='Responded At')),
                ('responder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responded_messages', to=settings.AUTH_USER_MODEL, verbose_name='Responder')),
            ],
            options={
                'verbose_name': 'Contact Message',
                'verbose_name_plural': 'Contact Messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FAQItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('question', models.TextField(verbose_name='Question')),
                ('answer', models.TextField(verbose_name='Answer')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Whether the FAQ is visible.', verbose_name='Is Active')),
                ('order', models.PositiveIntegerField(default=0, help_text='Order within the category.', verbose_name='Display Order')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='content.faqcategory', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'FAQ Item',
                'verbose_name_plural': 'FAQ Items',
                'ordering': ['category__order', 'category__name', 'order', 'question'],
            },
        ),
    ]
